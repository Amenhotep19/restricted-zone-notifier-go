graph TD
A[Go] -->B[OpenCV]
B --> C[DNN module]
C-->V[OpenVINO backend]
C -->O[OpenCV backend]
V-->D[CPU]
V-->E[GPU 32-bit]
V-->F[GPU 16-bit]
V-->G[VPU]

graph TD
A[Go] -->B[OpenCV]
B --> C[DNN module]
C-->Caffe
C -->TensorFlow
C -->Torch
C -->Darknet
C-->V(OpenVINO IR)

graph TD
subgraph cloud
S[MQTT Server]
end
subgraph local
subgraph Frame thread
Q[Take next available frame from Go channel]-->P[Detect persons within restricted zone DNN]
P-->U[Update stats and alert]
end
subgraph Main thread
C[Capture frames]-->MQ[Add to Go channel]
MQ-->W[Window with display including stats]
end
subgraph Messaging thread
M[Send MQTT messages to server with stats]-- optional -->S
end
end

graph LR
subgraph Model creation
A[Define model architecture] -->|train|B[Trained model]
T(Training data set) -->B
end
subgraph Model usage
B --> |optimize|M[Optimized model]
M --> |inference|C[Result data]
R(Runtime data) -->C
end
